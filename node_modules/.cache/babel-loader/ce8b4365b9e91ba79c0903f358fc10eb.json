{"ast":null,"code":"var _jsxFileName = \"/Users/heeji/Documents/School/Winter 2020/Computation Studio/cast/src/Components/ThoughtForm.js\";\nimport React from 'react';\nimport ScrollButton from './ScrollButton';\nimport { Link } from 'react-router-dom';\n\nfunction ThoughtForm() {\n  const [event, setEvent] = React.useState('');\n  const [action1, setAction1] = React.useState('');\n  const [action2, setAction2] = React.useState('');\n  const [result, setResult] = React.useState('');\n  const [actionThoughts, setactionThoughts] = React.useState('');\n  const [resultThoughts, setresultThoughts] = React.useState('');\n  const resultText = result ? React.createElement(\"span\", {\n    className: \"result\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \" \", result, \" \") : React.createElement(\"span\", {\n    className: \"eventPlaceholder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"result\");\n  const action1Text = action1 ? React.createElement(\"span\", {\n    className: \"action\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \" \", action1, \" \") : React.createElement(\"span\", {\n    className: \"eventPlaceholder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"firstAction\");\n  const action2Text = action2 ? React.createElement(\"span\", {\n    className: \"action\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \" \", action2, \" \") : React.createElement(\"span\", {\n    className: \"eventPlaceholder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"secondAction\");\n  const eventText = event ? React.createElement(\"span\", {\n    className: \"event\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \" \", event, \" \") : React.createElement(\"span\", {\n    className: \"eventPlaceholder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"an upcoming event\");\n  return React.createElement(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"What are you thinking?\"), React.createElement(\"form\", {\n    className: \"thoughtForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"event\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"I'm worried about\"), React.createElement(\"div\", {\n    className: \"flexLine\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"event\",\n    type: \"text\",\n    id: \"event\",\n    value: event,\n    onChange: e => {\n      setEvent(e.target.value);\n    },\n    placeholder: \"an upcoming event\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \",\")), React.createElement(\"label\", {\n    htmlFor: \"action1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Because I'm scared I will\"), React.createElement(\"div\", {\n    className: \"actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"action\",\n    type: \"text\",\n    id: \"action1\",\n    value: action1,\n    onChange: e => {\n      setAction1(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"action2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"and\"), React.createElement(\"input\", {\n    className: \"action\",\n    type: \"text\",\n    id: \"action2\",\n    value: action2,\n    onChange: e => {\n      setAction2(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \",\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"resulting \", eventText), React.createElement(\"div\", {\n    className: \"flexLine\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"result\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"to be\"), React.createElement(\"input\", {\n    className: \"result\",\n    type: \"text\",\n    id: \"result\",\n    value: result,\n    onChange: e => {\n      setResult(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \".\")), React.createElement(ScrollButton, {\n    enabled: event && action1 && action2 && result,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))), React.createElement(\"section\", {\n    className: \"thoughts page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, action1Text), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, action2Text), React.createElement(\"p2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Do these happen often?\"), React.createElement(\"textarea\", {\n    name: \"\",\n    value: actionThoughts,\n    onChange: e => setactionThoughts(e.target.value),\n    id: \"\",\n    cols: \"30\",\n    rows: \"10\",\n    placeholder: \"Write your thoughts..\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(ScrollButton, {\n    enabled: actionThoughts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }))), React.createElement(\"section\", {\n    className: \"thoughts page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, resultText), React.createElement(\"p2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Define \\\"\", resultText, \"\\\". What does it mean in this situation?\"), React.createElement(\"textarea\", {\n    name: \"\",\n    value: resultThoughts,\n    onChange: e => setresultThoughts(e.target.value),\n    id: \"\",\n    cols: \"30\",\n    rows: \"10\",\n    placeholder: \"Write your thoughts..\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(ScrollButton, {\n    enabled: resultThoughts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }))), React.createElement(\"section\", {\n    className: \"thoughts page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    action: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, eventText), React.createElement(\"p2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"If you can, think back to the times you experienced this.\"), React.createElement(\"p2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"On average, how long were you affected by them for?\"), React.createElement(\"div\", {\n    className: \"lineFlex timeSelect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"time\",\n    className: \"visually-hidden\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Time Frame\"), React.createElement(\"input\", {\n    type: \"number\",\n    defaultValue: 0,\n    id: \"time\",\n    min: 0,\n    max: 100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"counter\",\n    className: \"visually-hidden\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Time Counter\"), React.createElement(\"select\", {\n    name: \"counter\",\n    id: \"counter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"Hours\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Hours\"), React.createElement(\"option\", {\n    value: \"Days\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Days\"), React.createElement(\"option\", {\n    value: \"Weeks\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Weeks\"), React.createElement(\"option\", {\n    value: \"Months\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Months\"), React.createElement(\"option\", {\n    value: \"Years\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Years\")), React.createElement(ScrollButton, {\n    enabled: resultThoughts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })))), React.createElement(\"section\", {\n    className: \"thoughts page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Let's de-catastrophize.\"), React.createElement(Link, {\n    to: \"/Results\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Continue\"))));\n}\n\nexport default ThoughtForm;","map":{"version":3,"sources":["/Users/heeji/Documents/School/Winter 2020/Computation Studio/cast/src/Components/ThoughtForm.js"],"names":["React","ScrollButton","Link","ThoughtForm","event","setEvent","useState","action1","setAction1","action2","setAction2","result","setResult","actionThoughts","setactionThoughts","resultThoughts","setresultThoughts","resultText","action1Text","action2Text","eventText","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AAGA,SAASC,WAAT,GAAuB;AAEvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,KAAK,CAACM,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,KAAK,CAACM,QAAN,CAAe,EAAf,CAA9B;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBV,KAAK,CAACM,QAAN,CAAe,EAAf,CAA9B;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBZ,KAAK,CAACM,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCd,KAAK,CAACM,QAAN,CAAe,EAAf,CAA5C;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsChB,KAAK,CAACM,QAAN,CAAe,EAAf,CAA5C;AAEA,QAAMW,UAAU,GAAGN,MAAM,GAAG;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA2BA,MAA3B,MAAH,GAA+C;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAxE;AACA,QAAMO,WAAW,GAAGX,OAAO,GAAG;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA2BA,OAA3B,MAAH,GAAgD;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA3E;AACA,QAAMY,WAAW,GAAGV,OAAO,GAAG;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA2BA,OAA3B,MAAH,GAAgD;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA3E;AACA,QAAMW,SAAS,GAAGhB,KAAK,GAAG;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA0BA,KAA1B,MAAH,GAA6C;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAApE;AAGE,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAGE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAGE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,OAAjB;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,OAFL;AAGE,IAAA,KAAK,EAAEA,KAHT;AAIE,IAAA,QAAQ,EAAIiB,CAAD,IAAO;AACdhB,MAAAA,QAAQ,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,KANL;AAQE,IAAA,WAAW,EAAC,mBARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAXF,CAHF,EAiBE;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAjBF,EAkBE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAE,QAAlB;AACE,IAAA,IAAI,EAAC,MADP;AACc,IAAA,EAAE,EAAC,SADjB;AAEE,IAAA,KAAK,EAAEhB,OAFT;AAGE,IAAA,QAAQ,EAAGc,CAAD,IAAO;AACbb,MAAAA,UAAU,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AAA4B,KAJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARF,EASE;AAAO,IAAA,SAAS,EAAC,QAAjB;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,EAAE,EAAC,SAFH;AAGA,IAAA,KAAK,EAAEd,OAHP;AAIA,IAAA,QAAQ,EACLY,CAAD,IAAO;AAAEX,MAAAA,UAAU,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AAA4B,KALvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAhBF,CAlBF,EAqCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcH,SAAd,CArCF,EAuCE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,EAEE;AAAO,IAAA,SAAS,EAAC,QAAjB;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,EAAE,EAAC,QAFH;AAGA,IAAA,KAAK,EAAET,MAHP;AAIA,IAAA,QAAQ,EACLU,CAAD,IAAO;AAAET,MAAAA,SAAS,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AAA2B,KALtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SATF,CAvCF,EAkDE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEnB,KAAK,IAAIG,OAAT,IAAoBE,OAApB,IAA+BE,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlDF,CAHF,CADF,EA8DE;AAAS,IAAA,SAAS,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIO,WAAJ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,WAAJ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAHF,EAIE;AACA,IAAA,IAAI,EAAC,EADL;AAEA,IAAA,KAAK,EAAIN,cAFT;AAGA,IAAA,QAAQ,EAAKQ,CAAD,IAAOP,iBAAiB,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAHpC;AAIA,IAAA,EAAE,EAAC,EAJH;AAKA,IAAA,IAAI,EAAC,IALL;AAMA,IAAA,IAAI,EAAC,IANL;AAOA,IAAA,WAAW,EAAG,uBAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAYE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEV,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF,CA9DF,EA+EE;AAAS,IAAA,SAAS,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAII,UAAJ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaA,UAAb,6CAFF,EAGE;AACA,IAAA,IAAI,EAAC,EADL;AAEA,IAAA,KAAK,EAAIF,cAFT;AAGA,IAAA,QAAQ,EAAKM,CAAD,IAAOL,iBAAiB,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAHpC;AAIA,IAAA,EAAE,EAAC,EAJH;AAKA,IAAA,IAAI,EAAC,IALL;AAMA,IAAA,IAAI,EAAC,IANL;AAOA,IAAA,WAAW,EAAG,uBAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAWE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAER,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF,CA/EF,EA+FE;AAAS,IAAA,SAAS,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,MAAM,EAAC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIK,SAAJ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAHF,EAKE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,MAAf;AAAsB,IAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAGE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,YAAY,EAAE,CAAnC;AAAsC,IAAA,EAAE,EAAC,MAAzC;AAAgD,IAAA,GAAG,EAAE,CAArD;AAAwD,IAAA,GAAG,EAAE,GAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAKE;AAAO,IAAA,OAAO,EAAC,SAAf;AAAyB,IAAA,SAAS,EAAC,iBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,EAOE;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,EAAE,EAAC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,EAIE;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EAKE;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,CAPF,EAcE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEL,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CALF,CADF,CA/FF,EAwHE;AAAS,IAAA,SAAS,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CAxHF,CADF,CADF;AAoID;;AAED,eAAeZ,WAAf","sourcesContent":["import React from 'react';\nimport ScrollButton from './ScrollButton';\nimport {Link} from 'react-router-dom';\n\n\nfunction ThoughtForm() {\n\nconst [event, setEvent] = React.useState('');\nconst [action1, setAction1] = React.useState('');\nconst [action2, setAction2] = React.useState('');\nconst [result, setResult] = React.useState('');\nconst [actionThoughts, setactionThoughts] = React.useState('');\nconst [resultThoughts, setresultThoughts] = React.useState('');\n\nconst resultText = result ? <span className=\"result\"> {result} </span> :<span className=\"eventPlaceholder\">result</span>\nconst action1Text = action1 ? <span className=\"action\"> {action1} </span> :<span className=\"eventPlaceholder\">firstAction</span>\nconst action2Text = action2 ? <span className=\"action\"> {action2} </span> :<span className=\"eventPlaceholder\">secondAction</span>\nconst eventText = event ? <span className=\"event\"> {event} </span> :<span className=\"eventPlaceholder\">an upcoming event</span>\n\n\n  return (\n    <div className=\"wrapper\">\n      <main>\n        <section className=\"page\">\n          <p className=\"title\">What are you thinking?</p>\n  \n          <form className=\"thoughtForm\">\n            <label htmlFor=\"event\">I'm worried about</label>\n  \n            <div className=\"flexLine\">\n              <input className=\"event\"\n                type=\"text\" \n                id=\"event\" \n                value={event} \n                onChange={ (e) => { \n                    setEvent(e.target.value) \n                  }\n                }\n                placeholder=\"an upcoming event\"\n              />\n              <p>,</p>\n            </div>\n  \n            <label htmlFor=\"action1\">Because I'm scared I will</label>\n            <div className=\"actions\">\n              <input className= \"action\"\n                type=\"text\" id=\"action1\" \n                value={action1} \n                onChange={(e) => { \n                    setAction1(e.target.value) }\n              }/>\n              \n              <label htmlFor=\"action2\">and</label>\n              <input className=\"action\"\n              type=\"text\" \n              id=\"action2\" \n              value={action2} \n              onChange={\n                (e) => { setAction2(e.target.value) }\n              }/>\n              <p>,</p>\n            </div>\n  \n            <p>resulting {eventText}</p>\n  \n            <div className=\"flexLine\">\n            <label htmlFor=\"result\">to be</label>\n              <input className=\"result\" \n              type=\"text\" \n              id=\"result\" \n              value={result} \n              onChange={\n                (e) => { setResult(e.target.value) }\n              }/>\n              <p>.</p>\n            </div>\n            <ScrollButton enabled={event && action1 && action2 && result}/>\n            \n  \n          </form>\n\n\n        </section>\n\n        <section className=\"thoughts page\">\n          <form>\n            <p>{action1Text}</p>\n            <p>{action2Text}</p>\n            <p2>Do these happen often?</p2>\n            <textarea \n            name=\"\" \n            value = {actionThoughts} \n            onChange = {(e) => setactionThoughts(e.target.value)}\n            id=\"\" \n            cols=\"30\" \n            rows=\"10\"\n            placeholder = \"Write your thoughts..\"></textarea>\n            <ScrollButton enabled={actionThoughts}/>\n          </form>\n        </section>\n\n        <section className=\"thoughts page\">\n          <form>\n            <p>{resultText}</p>\n            <p2>Define \"{resultText}\". What does it mean in this situation?</p2>\n            <textarea \n            name=\"\" \n            value = {resultThoughts} \n            onChange = {(e) => setresultThoughts(e.target.value)}\n            id=\"\" \n            cols=\"30\" \n            rows=\"10\"\n            placeholder = \"Write your thoughts..\"></textarea>\n            <ScrollButton enabled={resultThoughts}/>\n          </form>\n        </section>\n\n        <section className=\"thoughts page\">\n          <form action=\"\">\n            <p>{eventText}</p>\n            <p2>If you can, think back to the times you experienced this.</p2>\n            <p2>On average, how long were you affected by them for?</p2>\n\n            <div className=\"lineFlex timeSelect\">\n              <label htmlFor=\"time\" className=\"visually-hidden\">Time Frame</label>\n  \n              <input type=\"number\" defaultValue={0} id=\"time\" min={0} max={100}/>\n  \n              <label htmlFor=\"counter\" className=\"visually-hidden\">Time Counter</label>\n  \n              <select name=\"counter\" id=\"counter\">\n                <option value=\"Hours\">Hours</option>\n                <option value=\"Days\">Days</option>\n                <option value=\"Weeks\">Weeks</option>\n                <option value=\"Months\">Months</option>\n                <option value=\"Years\">Years</option>\n              </select>\n              <ScrollButton enabled={resultThoughts}/>\n            </div>\n          </form>\n        </section>\n\n        <section className=\"thoughts page\">\n            <p className=\"title\">Let's de-catastrophize.</p>\n            <Link to = \"/Results\">Continue</Link>\n        </section>\n\n\n      </main>\n\n    </div>\n  );\n}\n\nexport default ThoughtForm;\n"]},"metadata":{},"sourceType":"module"}